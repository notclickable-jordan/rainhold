services:
    db:
        image: postgres:14-alpine
        container_name: mastodon_db
        restart: unless-stopped
        env_file:
            - .env.postgres
        shm_size: 256mb
        networks:
            - proxy
            - internal_network
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "mastodon"]
        volumes:
            - db:/var/lib/postgresql/data

    redis:
        image: redis:7-alpine
        container_name: mastodon_redis
        restart: unless-stopped
        networks:
            - proxy
            - internal_network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
        volumes:
            - redis:/data

    web:
        image: ghcr.io/mastodon/mastodon:v4.3.8
        container_name: mastodon_web
        restart: unless-stopped
        env_file:
            - .env
        command: bundle exec puma -C config/puma.rb
        networks:
            - proxy
            - external_network
            - internal_network
        healthcheck:
            # prettier-ignore
            test: ['CMD-SHELL',"curl -s --noproxy localhost localhost:3000/health | grep -q 'OK' || exit 1"]
        ports:
            - 4217:3000
        depends_on:
            - db
            - redis
        volumes:
            - web:/mastodon/public/system
        extra_hosts:
            - "host.docker.internal:host-gateway"
        labels:
            traefik.enable: true
            traefik.http.routers.mastodon.entrypoints: websecure
            traefik.http.routers.mastodon.rule: (Host(`notclickable.social`))
            traefik.http.routers.mastodon.tls: true
            traefik.http.routers.mastodon.tls.certresolver: cloudflare
            traefik.http.routers.mastodon.service: mastodon
            traefik.http.services.mastodon.loadbalancer.server.port: 3000
            traefik.docker.network: proxy

    streaming:
        image: ghcr.io/mastodon/mastodon-streaming:v4.3.8
        container_name: mastodon_streaming
        restart: unless-stopped
        env_file:
            - .env
        command: node ./streaming/index.js
        networks:
            - proxy
            - external_network
            - internal_network
        healthcheck:
            # prettier-ignore
            test: ['CMD-SHELL', "curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1"]
        ports:
            - 4218:4000
        depends_on:
            - db
            - redis
        extra_hosts:
            - "host.docker.internal:host-gateway"
        labels:
            traefik.enable: true
            traefik.http.routers.mastodon-api.entrypoints: websecure
            traefik.http.routers.mastodon-api.rule: (Host(`notclickable.social`) && PathPrefix(`/api/v1/streaming`))
            traefik.http.routers.mastodon-api.tls: true
            traefik.http.routers.mastodon-api.tls.certresolver: cloudflare
            traefik.http.routers.mastodon-api.service: mastodon-api
            traefik.http.services.mastodon-api.loadbalancer.server.port: 4000
            traefik.docker.network: proxy

    sidekiq:
        image: ghcr.io/mastodon/mastodon:v4.3.8
        container_name: mastodon_sidekiq
        restart: unless-stopped
        env_file:
            - .env
        command: bundle exec sidekiq
        depends_on:
            - db
            - redis
        networks:
            - proxy
            - external_network
            - internal_network
        healthcheck:
            test: ["CMD-SHELL", "ps aux | grep '[s]idekiq\ 6' || false"]
        volumes:
            - web:/mastodon/public/system

networks:
    proxy:
        external: true
    internal_network:
        driver: bridge
    external_network:
        driver: bridge

volumes:
    sidekiq:
    db:
    redis:
    web:
